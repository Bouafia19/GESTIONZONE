

<title>My First Leaflet Map</title>

<meta charset=utf-8 />
<title>Searching feature layers</title>
<meta name='viewport' content='initial-scale=1,maximum-scale=1,user-scalable=no' />

<!-- Load Leaflet from CDN -->
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.4.0/dist/leaflet.css"
      integrity="sha512-puBpdR0798OZvTTbP4A8Ix/l+A4dHDD0DGqYW6RQ+9jxkRFclaxxQb/SJAWZfWAkuyeQUytO7+7N4QKrDh+drA=="
      crossorigin=""/>

<!-- Load Esri Leaflet from CDN -->
<script src="https://unpkg.com/esri-leaflet@2.2.4/dist/esri-leaflet.js"
        integrity="sha512-tyPum7h2h36X52O2gz+Pe8z/3l+Y9S1yEUscbVs5r5aEY5dFmP1WWRY/WLLElnFHa+k1JBQZSCDGwEAnm2IxAQ=="
        crossorigin=""></script>

<!-- Load Esri Leaflet Geocoder from CDN -->
<link rel="stylesheet" href="https://unpkg.com/esri-leaflet-geocoder@2.2.14/dist/esri-leaflet-geocoder.css"
      integrity="sha512-v5YmWLm8KqAAmg5808pETiccEohtt8rPVMGQ1jA6jqkWVydV5Cuz3nJ9fQ7ittSxvuqsvI9RSGfVoKPaAJZ/AQ=="
      crossorigin="">
<script src="https://unpkg.com/esri-leaflet-geocoder@2.2.14/dist/esri-leaflet-geocoder.js"
        integrity="sha512-uK5jVwR81KVTGe8KpJa1QIN4n60TsSV8+DPbL5wWlYQvb0/nYNgSOg9dZG6ViQhwx/gaMszuWllTemL+K+IXjg=="
        crossorigin=""></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.7.3/Chart.min.js"></script>

<style>
  .chart-container {
    height: 245px;
    width: 245px;
  }

  #info-pane {
    position: absolute;
    top: 70px;
    right: 10px;
    z-index: 400;
    padding: 1em;
    background: white;
  }
</style>

<style>
  body { margin:0; padding:0; }
  #map { position: absolute; top:0; bottom:0; right:0; left:0; }
</style>


<style>
  #map { height: 800px; }
</style>




<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
<link rel="stylesheet" href="https://unpkg.com/leaflet@1.3.1/dist/leaflet.css"
      integrity="sha512-Rksm5RenBEKSKFjgI3a41vrjkw4EVPlJ3+OiI65vTjIdo9brlAacEuKOiQ5OFh7cOI1bkDwLqdLw3Zg0cRJAAQ=="
      crossorigin=""/>
<link rel="stylesheet" href="https://unpkg.com/leaflet-draw@1.0.2/dist/leaflet.draw.css" />

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>
<script src="https://cdn.rawgit.com/mejackreed/Leaflet-IIIF/v2.0.1/leaflet-iiif.js"></script>
<script src="https://unpkg.com/leaflet-draw@1.0.2/dist/leaflet.draw.js"></script>

<script src="https://npmcdn.com/leaflet-geometryutil"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.rawgit.com/gokertanrisever/leaflet-ruler/master/src/leaflet-ruler.css">
<script src="https://cdn.rawgit.com/gokertanrisever/leaflet-ruler/master/src/leaflet-ruler.js"></script>


<script src='https://npmcdn.com/@turf/turf/turf.min.js'></script>



<script src='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/Leaflet.fullscreen.min.js'></script>
<link href='https://api.mapbox.com/mapbox.js/plugins/leaflet-fullscreen/v1.0.1/leaflet.fullscreen.css' rel='stylesheet' />

<link rel="stylesheet" href="https://unpkg.com/leaflet@1.2.0/dist/leaflet.css" />
<link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.css" />
<script src="https://unpkg.com/leaflet-routing-machine@latest/dist/leaflet-routing-machine.js"></script>






<%= javascript_include_tag('lib/leaflet.ajax.min.js') %>
<%= javascript_include_tag('lib/leaflet.measure.js') %>

<%= javascript_include_tag('lib/leaflet.browser.print.min.js') %>

<%= javascript_include_tag('lib/leaflet-measure-path.js') %>
<%= stylesheet_link_tag "lib/leaflet-measure-path.css" %>

<%= stylesheet_link_tag "lib/leaflet.measure.css" %>



<%= stylesheet_link_tag "lib/Control.Coordinates.css" %>
<%= javascript_include_tag('lib/Control.Coordinates.js') %>

<%= stylesheet_link_tag "lib/Control.Coordinates.css" %>
<%= javascript_include_tag('lib/Control.Coordinates.js') %>

<%= stylesheet_link_tag "lib/leaflet.label.css" %>
<%= javascript_include_tag('lib/leaflet.label.js') %>

<%= stylesheet_link_tag "lib/L.Control.SlideMenu.css" %>
<%= javascript_include_tag('lib/L.Control.SlideMenu.js') %>


<%= stylesheet_link_tag "lib/leaflet.magnifyingglass.css" %>
<%= stylesheet_link_tag "lib/Control.MagnifyingGlass.css" %>
<%= javascript_include_tag('lib/leaflet.magnifyingglass.js') %>
<%= javascript_include_tag('lib/example_button.js') %>



<%= stylesheet_link_tag "lib/leaflet-search.css" %>
<%= javascript_include_tag('lib/leaflet-search.js') %>

<%= stylesheet_link_tag "lib/L.Control.Heightgraph.css" %>
<%= javascript_include_tag('lib/L.Control.Heightgraph.js') %>

<%= javascript_include_tag('lib/example_mappings.js') %>




<%= stylesheet_link_tag "lib/leaflet.table.css" %>
<%= javascript_include_tag('lib/leaflet.table.js') %>
<%= stylesheet_link_tag "lib/supagrid.css" %>
<%= javascript_include_tag('lib/supagrid.js') %>





<script src="https://d3js.org/d3.v4.min.js"></script>
<script src="https://d3js.org/d3-scale-chromatic.v0.3.min.js"></script>

<link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">

<style>
  #basemaps-wrapper {
    position: absolute;
    top: 10px;
    right: 50%;
    z-index: 400;
    background: white;
    padding: 10px;
  }
  #basemaps {
    margin-bottom: 5px;
  }
    .legend {background: white;
      line-height: 18px;
      color: #555;
      box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
      transition: 0.3s;
      border-radius: 5px;
    }
  .legend:hover {
    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
  }
    .legend i {width: 18px;
      height: 18px;
      float: left;
      margin-right: 8px;
      opacity: 0.7;}
</style>

<div id="map"></div>

<div id="basemaps-wrapper" class="leaflet-bar">
  <select name="basemaps" id="basemaps" onChange="changeBasemap(basemaps)">
    <option value="Topographic">Topographic</option>
    <option value="Streets">Streets</option>
    <option value="NationalGeographic">National Geographic</option>
    <option value="Gray">Gray</option>
    <option value="DarkGray">Dark Gray</option>
    <option value="Imagery">Imagery</option>
    <option value="ImageryClarity">Imagery (Clarity)</option>
    <option value="ImageryFirefly">Imagery (Firefly)</option>
    <option value="ShadedRelief">Shaded Relief</option>
    <option value="Physical">Physical</option>
  </select>
</div>



<script>




    var map = L.map('map',{
        center: [36.1700 , 5.5199],
        zoom: 12,
        fullscreenControl: true,
        measureControl: true


    });

    var tileUrl = L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
    }).addTo(map);

    L.control.slideMenu(
        '<div class = "col-xs-4"><h5 style="color: #17a2b8" align="center">FILTRE: ZI OULED SABER<h5></div>' +
        '<div class="btn-group" >' +
        '<button type="button" id="allbus" class="btn btn-success">Tous les lots</button>' +
        '<button type="button" id="others" class="btn btn-primary">lot occupé</button>' +
        '<button type="button" id="clear" class="btn btn-warning">cacher</button>' +
        '<button type="button" id="cafes" class="btn btn-danger">lot libre</button>' +
        '</div>' + '<br>' + '<br>' +
        '<div class = "col-xs-4"><h6 style="color: #17a2b8">filtrer par secteur d\'activité <h6></div>' +
        '<select id="sta_select" class="form-control col-8" onchange="myFunction(event)">' +
        '  <option>Secteur d\'activité</option>' +
        '  <option value="INDUSTRIE">INDUSTRIE</option>' +
        '  <option value="SERVICES">SERVICES</option>' +
        '  <option value="TOURISME">TOURISME</option>' +
        '  <option value="AGRICULTURE">AGRICULTURE</option>' +
        '</select>' + '<br>' +
        '<div class = "col-xs-4"><h6 style="color: #17a2b8">filtrer par montant d\'investissement<h6></div>' +
        '<form name ="subscribe" class="form-inline" id="subscribe_frm" action="#">' +
        '<input type="number" placeholder="montant DA" class="form-control col-8" id="txt_name" />' + '<br>' +
        '<input type="button" name="submit" value="Filtrer" class="btn btn-md btn-warning" onclick="processFormData()" />' +
        '</form>' + '<br>' +
        '<div class = "col-xs-4"><h6 style="color: #17a2b8">filtrer par superficie <h6></div>' +
        '<form name ="subscribe" class="form-inline" id="subscribe_frm" action="#">' +
        '<input type="number"  placeholder="superficie" class="form-control col-8" id="txt" />' + '<br>' +
        '<input type="button" name="submit" value="Filtrer" class="btn btn-md btn-primary" onclick="processForm()" />' +
        '</form>' + '<br>' +
        '<hr style="border-width: 4px">' +
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        '<div class = "col-xs-4"><h5 style="color: #17a2b8" align="center">FILTRE: ZI ANCIENNE<h5></div>' +
        '<div class="btn-group" >' +
        '<button type="button" id="all" class="btn btn-success">Tous les lots</button>' +
        '<button type="button" id="lnovide" class="btn btn-primary">lot occupé</button>' +
        '<button type="button" id="libre" class="btn btn-warning">cacher</button>' +
        '<button type="button" id="lvide" class="btn btn-danger">lot libre</button>' +
        '</div>' + '<br>' + '<br>' +
        '<div class = "col-xs-4"><h6 style="color: #17a2b8">filtrer par secteur d\'activité <h6></div>' +
        '<select id="st_select" class="form-control col-8" onchange="monFunction(event)">' +
        '  <option>Secteur d\'activité</option>' +
        '  <option value="INDUSTRIE">INDUSTRIE</option>' +
        '  <option value="SERVICES">SERVICES</option>' +
        '  <option value="TOURISME">TOURISME</option>' +
        '  <option value="AGRICULTURE">AGRICULTURE</option>' +
        '</select>' + '<br>' +
        '<div class = "col-xs-4"><h6 style="color: #17a2b8">filtrer par montant d\'investissement<h6></div>' +
        '<form name ="subscribe" class="form-inline" id="subscribe_frm" action="#">' +
        '<input type="number" placeholder="montant DA" class="form-control col-8" id="txt_mont" />' + '<br>' +
        '<input type="button" name="submit" value="Filtrer" class="btn btn-md btn-warning" onclick="processData()" />' +
        '</form>' + '<br>' +
        '<div class = "col-xs-4"><h6 style="color: #17a2b8">filtrer par superficie  <h6></div>' +
        '<form name ="subscribe" class="form-inline" id="subscribe_frm" action="#">' +
        '<input type="number" placeholder="superficie" class="form-control col-8" id="txt_su" />' + '<br>' +
        '<input type="button" name="submit" value="Filtrer" class="btn btn-md btn-primary" onclick="process()" />' +
        '</form>' + '<br>' +
        '<hr style="border-width: 4px">' +
        ////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
        '<div class = "col-xs-4"><h5 style="color: #17a2b8" align="center">FILTRE: ZI EL EULMA<h5></div>' +
        '<div class="btn-group" >' +
        '<button type="button" id="mall" class="btn btn-success">Tous les lots</button>' +
        '<button type="button" id="mnovide" class="btn btn-primary">lot occupé</button>' +
        '<button type="button" id="mlibre" class="btn btn-warning">cacher</button>' +
        '<button type="button" id="mvide" class="btn btn-danger">lot libre</button>' +
        '</div>' + '<br>' + '<br>' +
        '<div class = "col-xs-4"><h6 style="color: #17a2b8">filtrer par secteur d\'activité <h6></div>' +
        '<select id="st_select" class="form-control col-8" onchange="monFunctionm(event)">' +
        '  <option>Secteur d\'activité</option>' +
        '  <option value="INDUSTRIE">INDUSTRIE</option>' +
        '  <option value="SERVICES">SERVICES</option>' +
        '  <option value="TOURISME">TOURISME</option>' +
        '  <option value="AGRICULTURE">AGRICULTURE</option>' +
        '</select>' + '<br>' +
        '<div class = "col-xs-4"><h6 style="color: #17a2b8">filtrer par montant d\'investissement<h6></div>' +
        '<form name ="subscribe" class="form-inline" id="subscribe_frm" action="#">' +
        '<input type="number" placeholder="montant DA" class="form-control col-8" id="txt_montm" />' + '<br>' +
        '<input type="button" name="submit" value="Filtrer" class="btn btn-md btn-warning" onclick="processDatam()" />' +
        '</form>' + '<br>' +
        '<div class = "col-xs-4"><h6 style="color: #17a2b8">filtrer par superficie  <h6></div>' +
        '<form name ="subscribe" class="form-inline" id="subscribe_frm" action="#">' +
        '<input type="number" placeholder="superficie" class="form-control col-8" id="txt_sum" />' + '<br>' +
        '<input type="button" name="submit" value="Filtrer" class="btn btn-md btn-primary" onclick="processm()" />' +
        '</form>' + '<br>'


    ).addTo(map);




    var options = {
        position: 'topleft',

    };
    L.control.ruler(options).addTo(map);


    var c = new L.Control.Coordinates({
        position: 'bottomright',

    });

    c.addTo(map);

    map.on('click', function(e) {
        c.setCoordinates(e);
    });


    // Initialise the FeatureGroup to store editable layers
    var drawnItems = new L.FeatureGroup();
    map.addLayer(drawnItems);

    // Initialise the draw control and pass it the FeatureGroup of editable layers
    var drawControl = new L.Control.Draw({
        draw: {
            polygon: {
                shapeOptions: {
                    showMeasurements: true,
                    color: 'purple'
                },
                allowIntersection: false,
                drawError: {
                    color: 'orange',
                    timeout: 1000
                },
                showArea: true,
                metric: true,

                repeatMode: true
            },
            polyline: {
                shapeOptions: {
                    showMeasurements: true,
                    color: 'red'
                },

                metric: true,
                repeatMode: true
            },
            rectangle: {
                shapeOptions: {
                    color: 'green',
                    showMeasurements: true
                },
                showArea: true,
                metric: true,
                repeatMode: true
            },
            circle: {
                shapeOptions: {
                    showMeasurements: true,
                    color: 'steelblue'
                },
                showArea: true,
                metric: true,
                repeatMode: true
            },
        },
        edit: {
            featureGroup: drawnItems
        }
    });

    map.addControl(drawControl);

    map.on(L.Draw.Event.CREATED, function (e) {
        var type = e.layerType;
        var layer = e.layer;

        // Do whatever else you need to. (save to db, add to map etc)

        drawnItems.addLayer(layer);
    });


    function popUp(features,layer) {


        layer.bindTooltip('Num Lot :  ' + features.properties.N_de_lot.toString()
            +'<br>' + 'Raison sociale :  ' + features.properties._R_socia_français ,
            {permanent: false}
            );

        layer.on({
            mouseover: highlightFeature,
            mouseout: resetHighlight
        });

        layer.bindPopup(
            'Raison sociale francaie :  ' + features.properties._R_socia_français
            +'<br>'+ 'Num Lot :  ' + features.properties.N_de_lot
            +'<br>'+ 'Raison sociale arabe :  ' + features.properties._R_socia_arabe
            +'<br>'+ 'Montant Investissement :  ' + features.properties._Mont_Investis_Millions_DA
            +'<br>'+ 'Adresse :  ' + features.properties._Adresse
            +'<br>'+ 'Intitule projet arabe :  ' + features.properties._Int_projet_arabe
            +'<br>'+ 'Intitule projet francais :  ' + features.properties._Int_projet_français
            +'<br>'+ 'Secteur Activite :  ' + features.properties._Sect_Activite
            +'<br>'+ 'Filliere Industrielle :  ' + features.properties._Fil_Indust
            +'<br>'+  'Modifier: ' + '<a href="'+ features.properties.url + '"target="_blank">lien</a>'
            //+'<br>'+ '<img src="'+ features.properties.photo +'" style="width:300px;height:200px;">'
        );

    }

    function colors(hello){

        return hello == null ? '#8856a7' :
                                    '#2c7fb8';


    }

    function style(features) {
        return {
            fillColor: colors(features.properties._R_socia_français),
            weight: 2,
            opacity: 1,
            color: 'white',
            dashArray: '3',
            fillOpacity: 0.7
        };
    }


    L.control.browserPrint().addTo(map);

    L.Routing.control({
        waypoints: [
            L.latLng(36.1936 , 5.3744),
            L.latLng(36.2410, 5.5574  )
        ]
    }).addTo(map);


    var geojsonda1 = new L.GeoJSON.AJAX('../zone_ind_3.json',{onEachFeature: popUp,style: style });
    var geojsonda2 = new L.GeoJSON.AJAX('../zone_ind_4.json',{onEachFeature: popUp,style: style });
    var geojsonda3 = new L.GeoJSON.AJAX('../zone_ind_5.json',{onEachFeature: popUp,style: style });
    var geojsonda4 = new L.GeoJSON.AJAX('../zone_ind_6.json',{onEachFeature: popUp,style: style });



    //////////////////////////////////////////////////////////////////////

    var eulma = $.getJSON('../zone_ind_6.json');

    eulma.then(function(data) {
        var mallinesses = L.geoJson(data);
        var mvide = L.geoJson(data, {
            filter: function(feature, layer) {
                return feature.properties._R_socia_français == null;
            },
            style: style,
            onEachFeature: popUp

        });

        var mnovide = L.geoJson(data, {
            filter: function(feature, layer) {
                return feature.properties._R_socia_français != null;
            },
            style: style,
            onEachFeature: popUp
        });
// mvide.addTo(map)
// mnovide.addTo(map)
        $("#mnovide").click(function() {
// map.removeLayer(geojsonda4)
            mvide.setStyle({
                fillColor: 'red',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});

// map.removeLayer(mvide)
            mnovide.setStyle({
                fillColor: 'blue',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(mnovide)
        });
        $("#mvide").click(function() {
// map.removeLayer(geojsonda4)
            mnovide.setStyle({
                fillColor: 'blue',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});

//map.removeLayer(mnovide)
            mvide.setStyle({
                fillColor: 'red',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(mvide)
        });
        $("#mall").click(function() {
//map.addLayer(mvide)
//map.addLayer(mnovide)
// map.addLayer(geojsonda4)
            map.removeLayer(mvide)
            map.removeLayer(mnovide)

            geojsonda4.setStyle({
                fillColor: '#3f0',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(geojsonda4)
        });



        $("#mlibre").click(function() {
            map.removeLayer(mvide)
            map.removeLayer(mnovide)
            map.removeLayer(geojsonda4)

        });



    });


    function processDatam() {
        eulma.then(function(data) {

            var name_element = document.getElementById('txt_montm');
            var name = name_element.value;

            var fil = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Mont_Investis_Millions_DA > name;
                },

                style: style,
                onEachFeature: popUp
            });
            fil.setStyle({
                fillColor: 'green',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(fil)
        });
    }


    function processm() {
        eulma.then(function(data) {

            var name_element = document.getElementById('txt_sum');
            var name = name_element.value;

            var fil = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Su_octroyee > name;
                },

                style: style,
                onEachFeature: popUp
            });
            fil.setStyle({
                fillColor: 'green',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(fil)
        });

    }




    function monFunctionm(e) {
        eulma.then(function(data) {
            var mallinesses = L.geoJson(data);
            var mvide = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Sect_Activite == "INDUSTRIE";
                },
                style: style,
                onEachFeature: popUp

            });
            var name_element = document.getElementById('txt_montm');
            var name = name_element.value;

            var fil = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Mont_Investis_Millions_DA > name;
                },
                style: style,
                onEachFeature: popUp
            });

            var mnovide = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Sect_Activite == "SERVICES";
                },
                style: style,
                onEachFeature: popUp
            });
// mvide.addTo(map)
// mnovide.addTo(map)
            if(e.target.value == "INDUSTRIE"){
// map.removeLayer(geojsonda4)
                mnovide.setStyle({
                    fillColor: 'blue',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});
//map.removeLayer(mnovide)
                mvide.setStyle({
                    fillColor: 'red',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});
                map.addLayer(mvide)
            }else{
                mvide.setStyle({
                    fillColor: 'red',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});

// map.removeLayer(mvide)
                mnovide.setStyle({
                    fillColor: 'blue',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});
                map.addLayer(mnovide)
            }
        });


    }




///////////////////////////////////////////////////////////////

    var ancienne = $.getJSON('../zone_ind_5.json');

    ancienne.then(function(data) {
        var allinesses = L.geoJson(data);
        var lvide = L.geoJson(data, {
            filter: function(feature, layer) {
                return feature.properties._R_socia_français == null;
            },
            style: style,
            onEachFeature: popUp

        });

        var lnovide = L.geoJson(data, {
            filter: function(feature, layer) {
                return feature.properties._R_socia_français != null;
            },
            style: style,
            onEachFeature: popUp
        });
// lvide.addTo(map)
// lnovide.addTo(map)
        $("#lnovide").click(function() {
// map.removeLayer(geojsonda3)
            lvide.setStyle({
                fillColor: 'red',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});

// map.removeLayer(lvide)
            lnovide.setStyle({
                fillColor: 'blue',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(lnovide)
        });
        $("#lvide").click(function() {
// map.removeLayer(geojsonda3)
            lnovide.setStyle({
                fillColor: 'blue',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});

//map.removeLayer(lnovide)
            lvide.setStyle({
                fillColor: 'red',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(lvide)
        });
        $("#all").click(function() {
//map.addLayer(lvide)
//map.addLayer(lnovide)
// map.addLayer(geojsonda3)
            map.removeLayer(lvide)
            map.removeLayer(lnovide)

            geojsonda3.setStyle({
                fillColor: '#3f0',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(geojsonda3)
        });



        $("#libre").click(function() {
            map.removeLayer(lvide)
            map.removeLayer(lnovide)
            map.removeLayer(geojsonda3)

        });



    });


    function processData() {
        ancienne.then(function(data) {

            var name_element = document.getElementById('txt_mont');
            var name = name_element.value;

            var fil = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Mont_Investis_Millions_DA > name;
                },

                style: style,
                onEachFeature: popUp
            });
            fil.setStyle({
                fillColor: 'green',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(fil)
        });
    }


    function process() {
        ancienne.then(function(data) {

            var name_element = document.getElementById('txt_su');
            var name = name_element.value;

            var fil = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Su_octroyee > name;
                },

                style: style,
                onEachFeature: popUp
            });
            fil.setStyle({
                fillColor: 'green',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(fil)
        });

    }




    function monFunction(e) {
        ancienne.then(function(data) {
            var allinesses = L.geoJson(data);
            var lvide = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Sect_Activite == "INDUSTRIE";
                },
                style: style,
                onEachFeature: popUp

            });
            var name_element = document.getElementById('txt_mont');
            var name = name_element.value;

            var fil = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Mont_Investis_Millions_DA > name;
                },
                style: style,
                onEachFeature: popUp
            });

            var lnovide = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Sect_Activite == "SERVICES";
                },
                style: style,
                onEachFeature: popUp
            });
// lvide.addTo(map)
// lnovide.addTo(map)
            if(e.target.value == "INDUSTRIE"){
// map.removeLayer(geojsonda3)
                lnovide.setStyle({
                    fillColor: 'blue',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});
//map.removeLayer(lnovide)
                lvide.setStyle({
                    fillColor: 'red',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});
                map.addLayer(lvide)
            }else{
                lvide.setStyle({
                    fillColor: 'red',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});

// map.removeLayer(lvide)
                lnovide.setStyle({
                    fillColor: 'blue',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});
                map.addLayer(lnovide)
            }
        });


    }



////////////////////////////////////////////////////////////////////
    var promise = $.getJSON('../zone_ind_3.json');

    promise.then(function(data) {
        var allbusinesses = L.geoJson(data);
        var cafes = L.geoJson(data, {
            filter: function(feature, layer) {
                return feature.properties._R_socia_français == null;
            },
            style: style,
            onEachFeature: popUp

        });

        var others = L.geoJson(data, {
            filter: function(feature, layer) {
                return feature.properties._R_socia_français != null;
            },
            style: style,
            onEachFeature: popUp
        });
       // cafes.addTo(map)
       // others.addTo(map)
        $("#others").click(function() {
           // map.removeLayer(geojsonda1)
            cafes.setStyle({
                fillColor: 'red',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});

           // map.removeLayer(cafes)
            others.setStyle({
                fillColor: 'blue',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(others)
        });
        $("#cafes").click(function() {
           // map.removeLayer(geojsonda1)
            others.setStyle({
                fillColor: 'blue',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});

            //map.removeLayer(others)
            cafes.setStyle({
                fillColor: 'red',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(cafes)
        });
        $("#allbus").click(function() {
            //map.addLayer(cafes)
            //map.addLayer(others)
           // map.addLayer(geojsonda1)
            map.removeLayer(cafes)
            map.removeLayer(others)

            geojsonda1.setStyle({
                fillColor: '#3f0',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(geojsonda1)
        });



        $("#clear").click(function() {
            map.removeLayer(cafes)
            map.removeLayer(others)
            map.removeLayer(geojsonda1)

        });



    });


function processFormData() {
    promise.then(function(data) {

        var name_element = document.getElementById('txt_name');
        var name = name_element.value;

        var fil = L.geoJson(data, {
            filter: function(feature, layer) {
                return feature.properties._Mont_Investis_Millions_DA > name;
            },

            style: style,
            onEachFeature: popUp
        });
        fil.setStyle({
            fillColor: 'green',
            weight: 2,
            opacity: 1,
            color: 'white',
            dashArray: '3',
            fillOpacity: 0.7});
        map.addLayer(fil)
    });
}


    function processForm() {
        promise.then(function(data) {

            var name_element = document.getElementById('txt');
            var name = name_element.value;

            var fil = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Su_octroyee > name;
                },

                style: style,
                onEachFeature: popUp
            });
            fil.setStyle({
                fillColor: 'green',
                weight: 2,
                opacity: 1,
                color: 'white',
                dashArray: '3',
                fillOpacity: 0.7});
            map.addLayer(fil)
        });

    }




    function myFunction(e) {
        promise.then(function(data) {
            var allbusinesses = L.geoJson(data);
            var cafes = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Sect_Activite == "INDUSTRIE";
                },
                style: style,
                onEachFeature: popUp

            });
            var name_element = document.getElementById('txt_name');
            var name = name_element.value;

            var fil = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Mont_Investis_Millions_DA > name;
                },
                style: style,
                onEachFeature: popUp
            });

            var others = L.geoJson(data, {
                filter: function(feature, layer) {
                    return feature.properties._Sect_Activite == "SERVICES";
                },
                style: style,
                onEachFeature: popUp
            });
            // cafes.addTo(map)
            // others.addTo(map)
            if(e.target.value == "INDUSTRIE"){
                // map.removeLayer(geojsonda1)
                others.setStyle({
                    fillColor: 'blue',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});
                //map.removeLayer(others)
                cafes.setStyle({
                    fillColor: 'red',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});
                map.addLayer(cafes)
            }else{
                cafes.setStyle({
                    fillColor: 'red',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});

                // map.removeLayer(cafes)
                others.setStyle({
                    fillColor: 'blue',
                    weight: 2,
                    opacity: 1,
                    color: 'white',
                    dashArray: '3',
                    fillOpacity: 0.7});
                map.addLayer(others)
            }
        });



    }


    var cities  = L.layerGroup([geojsonda1,geojsonda2,geojsonda3,geojsonda4]);


    var yes = {
        "ALL ZI SETIF": cities,

    };

    var geo = {
        "ZI Ouled saber": geojsonda1,
        "ZI Extension": geojsonda2,
        "ZI Ancienne": geojsonda3,
        "ZI El eulma": geojsonda4,
        "ALL ZI SETIF": cities
        //"Test filter": promise

    };


    L.control.layers(yes, geo,{position :'topright'}).addTo(map);

    L.control.scale().addTo(map);


    var legend = L.control({position :'bottomright'});

    legend.onAdd = function (map) {
        var div = L.DomUtil.create('div','legend');
        var labels = ["lot libre","lot occupé par un investisseur"];
        var grades = [null,"EURL GOLDEN SHOP"];
        div.innerHTML = '<div><h4 align="center" style="color: #17a2b8">Legend<h4></div>';
        for(var i = 0; i< grades.length;i++){
            div.innerHTML += '<i style= "background:' + colors(grades[i]) + '">&nbsp;&nbsp;</i>&nbsp;&nbsp;' + labels[i] + '<br/>';
        }
        return div;
    };

    legend.addTo(map);


    function highlightFeature(e) {
        var layer = e.target;

        layer.setStyle({
            weight: 5,
            color: '#FFF',
            fillColor: 'white',
            dashArray: '',
            fillOpacity: 0
        });

        if (!L.Browser.ie && !L.Browser.opera && !L.Browser.edge) {
            layer.bringToFront();
        }
    }

    function resetHighlight(e) {
        geojsonda1.resetStyle(e.target);
    }

    function zoomToFeature(e) {
        map.fitBounds(e.target.getBounds());
    }


    var layer = L.esri.basemapLayer('Imagery').addTo(map);
    var layerLabels;

    function setBasemap(basemap) {
        if (layer) {
            map.removeLayer(layer);
        }

        layer = L.esri.basemapLayer(basemap);

        map.addLayer(layer);

        if (layerLabels) {
            map.removeLayer(layerLabels);
        }

        if (basemap === 'ShadedRelief'
            || basemap === 'Oceans'
            || basemap === 'Gray'
            || basemap === 'DarkGray'
            || basemap === 'Terrain'
        ) {
            layerLabels = L.esri.basemapLayer(basemap + 'Labels');
            map.addLayer(layerLabels);
        } else if (basemap.includes('Imagery')) {
            layerLabels = L.esri.basemapLayer('ImageryLabels');
            map.addLayer(layerLabels);
        }
    }

    function changeBasemap(basemaps){
        var basemap = basemaps.value;
        setBasemap(basemap);
    }


    var tileUr = 'http://{s}.tile.osm.org/{z}/{x}/{y}.png';



    var magnifyingGlass = L.magnifyingGlass({
        zoomOffset: 3,
        layers: [
            L.tileLayer(tileUr)
        ]
    });

    L.control.magnifyingglass(magnifyingGlass, {
        forceSeparateButton: true
    }).addTo(map);



    var geojsondatak = L.layerGroup([geojsonda1,geojsonda2,geojsonda3,geojsonda4]);


    var searchControl = new L.Control.Search({
        layer: geojsondatak,
        propertyName: '_R_socia_français',
        marker: false,
        moveToLocation: function(latlng, title, map) {
            //map.fitBounds( latlng.layer.getBounds() );
            var zoom = map.getBoundsZoom(latlng.layer.getBounds());
            map.setView(latlng, 16); // access the zoom
        }
    });
    searchControl.on('search:locationfound', function(e) {

        //console.log('search:locationfound', );
        //map.removeLayer(this._markerSearch)
        e.layer.setStyle({fillColor: '#3f0', color: '#0f0'});
        if(e.layer._popup)
            e.layer.openPopup();
    }).on('search:collapsed', function(e) {
        featuresLayer.eachLayer(function(layer) {	//restore feature color
            featuresLayer.resetStyle(layer);
        });
    });

    map.addControl( searchControl );  //inizialize search control

</script>















